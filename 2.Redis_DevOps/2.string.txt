2.2 字符串
1.set:
set key value [ex seconds] [px milliseconds] [nx|xx]
ex seconds：为键设置秒级过期时间。
px milliseconds：为键设置毫秒级过期时间。
nx：键必须不存在，才可以设置成功，用于添加。
xx：与nx相反，键必须存在，才可以设置成功，用于更新。

2.setex and setnx
Redis还提供了setex和setnx两个命令： 它们的作用set的ex和nx选项是一样的
setex key seconds value
setnx key value

3.批量设置值
mset key value [key value ...]
mget key [key ...]

4.计数
incr key(自增1)
decr key(自减1)
incrby key increment(自增指定数字)
decrby key decrement(自减指定数字)
incrbyfloat key increment(自增浮点数)

incr命令用于对值做自增操作，返回结果分为三种情况：
值不是整数，返回错误。
值是整数，返回自增后的结果。
键不存在，按照值为0自增，返回结果为1。

很多存储系统和编程语言内部使用CAS机制实现计数功能，会有一定的CPU开销，
Redis中完全不存在这个问题，因为Redis是单线程架构，任何命令到了Redis服务端都要顺序执行。

5.追加值
append key value
append可以向字符串尾部追加值，例如：
o127.0.0.1:6379> get key
"redis"
127.0.0.1:6379> append key world
(integer) 10
127.0.0.1:6379> get key
"redisworld"

6.字符串长度
127.0.0.1:6379> set ybx 中国人
127.0.0.1:6379> strlen ybx
(integer) 9

7.设置并返回原值
getset key value
getset和set一样会设置值，但是不同的是，它同时会返回键原来的值，例如：
127.0.0.1:6379> getset hello world
(nil)
127.0.0.1:6379> getset hello redis
"world"

8.设置指定位置的字符
setrange key offeset value
下面操作将值由pest变为了best：
127.0.0.1:6379> set redis pest
OK
127.0.0.1:6379> setrange redis 0 b
(integer) 4
127.0.0.1:6379> get redis
"best"

9.getrange key start end
getrange redis 0 1
"be"

================================================================
================================================================
