利用ruby工具自动创建集群

1.Ruby环境准备
cd soft
wget https:// cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.1.tar.gz
tar xvf ruby-2.3.1.tar.gz
./configure -prefix=/usr/local/ruby
make
make install

cd /usr/local/ruby
sudo cp bin/ruby /usr/local/bin
sudo cp bin/gem /usr/local/bin

wget http:// rubygems.org/downloads/redis-3.3.0.gem
gem install -l redis-3.3.0.gem
gem list

cp /root/soft/redis-3.2.0/src/redis-trib.rb  /usr/local/bin

# redis-trib.rb
Usage: redis-trib <command> <options> <arguments ...>
    create          host1:port1 ... hostN:portN
                  --replicas <arg>
    check           host:port
    info            host:port
    fix              host:port
                  --timeout <arg>
    reshard         host:port
                  --from <arg>
                  --to <arg>
                  --slots <arg>
                  --yes
                  --timeout <arg>
                  --pipeline <arg>

redis-trib.rb的提示信息可以看出，它提供了集群创建、检查、修复、均衡等命令行工具。

===============================================================================

2.准备节点
把之前手动创建集群时候,redis自动创建的集群配置文件都删除掉
rm 63*/node*

启动6个redis实例
redis-server redis_6379.conf
redis-server redis_6380.conf
redis-server redis_6381.conf
redis-server redis_6382.conf
redis-server redis_6383.conf
redis-server redis_6384.conf

===============================================================================
3.创建集群
redis-trib.rb create --replicas 1 127.0.0.1:6379 127.0.0.1:6380 127.0.0.1:6381 127.0.0.1:6382 127.0.0.1:6383 127.0.0.1:6384

--replicas参数指定集群中每个主节点配备几个从节点，这里设置为1。
我们出于测试目的使用本地IP地址127.0.0.1，如果部署节点使用不同的IP地址，
redis-trib.rb会尽可能保证主从节点不分配在同一机器下，因此会重新排序节点列表顺序。
===============================================================================
4.集群完整性检查
集群完整性指所有的槽都分配到存活的主节点上，只要16384个槽中有一个没有分配给节点则表示集群不完整
redis-trib.rb check 127.0.0.1:6379

===============================================================================
5.扩容集群 新加入节点到集群
redis-trib.rb add-node 127.0.0.1:6385 127.0.0.1:6379
redis-trib.rb add-node 127.0.0.1:6386 127.0.0.1:6379
相当于手动执行
cluster meet 127.0.0.1 6385
cluster meet 127.0.0.1 6386

6.迁移槽点到6385(redis开发运维 page298)
redis-trib.rb reshard 127.0.0.1:6379

7.6386做为6385的从节点
redis-cli -h 127.0.0.1 -p 6386 cluster replicate 7dbd4ff32c0f2bd81be2449bb825398395b2e36c
===============================================================================
8.收缩集群 删除6385 6386节点 (redis开发与运维page 301)
9.迁移6385的槽到6379,6380,6381
10.先下线从解点6386 再下线主节点6385
redis-trib.rb del-node 127.0.0.1:6379 6386的集群节点id
redis-trib.rb del-node 127.0.0.1:6379 6385的集群节点id
===============================================================================
10.7.7　数据迁移
应用Redis集群时，常需要把单机Redis数据迁移到集群环境。redis-trib.rb工具提供了导入功能，用于数据从单机向集群环境迁移的场景，
命令如下：
redis-trib.rb import host:port --from <arg> --copy --replace

redis-trib.rb import命令内部采用批量scan和migrate的方式迁移数据。这种迁移方式存在以下缺点：
1）迁移只能从单机节点向集群环境导入数据。
2）不支持在线迁移数据，迁移数据时应用方必须停写，无法平滑迁移数据。
3）迁移过程中途如果出现超时等错误，不支持断点续传只能重新全量导入。
4）使用单线程进行数据迁移，大数据量迁移速度过慢。
===============================================================================
正因为这些问题，社区开源了很多迁移工具，这里推荐一款唯品会开发的redis-migrate-tool，该工具可满足大多数Redis迁移需求，特点如下：
·支持单机、Twemproxy、Redis Cluster、RDB/AOF等多种类型的数据迁移。
·工具模拟成从节点基于复制流迁移数据，从而支持在线迁移数据，业务方不需要停写。
·采用多线程加速数据迁移过程且提供数据校验和查看迁移状态等功能。
更多细节见GitHub：https://github.com/vipshop/redis-migrate-tool 。
===============================================================================
===============================================================================
