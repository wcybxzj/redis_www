1.输入缓冲插入bigkey
php 5.create_largedata_for_migrate_test.php

watch -n1 "redis-cli  info|grep memory_human"
used_memory_human:804.95K redis已经使用
total_system_memory_human:2.80G 系统内存
maxmemory_human:1.86G 分配给redis的

watch -n1 'redis-cli info clients'
# Clients
connected_clients:1
client_longest_output_list:0  #当前使用的最大输出缓冲的那一个的量
client_biggest_input_buf:123217 #可以看命令输入缓冲最大的量
blocked_clients:0

connected_clients：代表当前Redis节点的客户端连接数，需要重点监控，一旦超过maxclients，新的客户端连接将被拒绝。
client_longest_output_list：当前所有输出缓冲区中最大对象个数。
client_biggest_input_buf：当前所有输入缓冲区中占用的最大容量（字节数）。
blocked_clients：正在执行阻塞命令（例如blpop、brpop、brpoplpush）的客户端个数。

watch -n1 "redis-cli client list"
qbuf-free=0 意味着命令输入缓冲就满了 要定位这个客户连接的问题
age几乎等于idle说明这个客户端一直在空闲状态，也要注意
=====================================================================
2.输出缓冲
client-output-buffer-limit <class> <hard limit> <soft limit> <soft seconds>

<class>：客户端类型，分为三种。
a）normal：普通客户端；
b）slave：slave客户端，用于复制；
c）pubsub：发布订阅客户端。

<hard limit>：如果客户端使用的输出缓冲区大于<hard limit>，客户端会被立即关闭。
<soft limit>和<soft seconds>：如果客户端使用的输出缓冲区超过了<soft limit>并且持续了<soft limit>秒，客户端会被立即关闭。

Redis的默认配置是：
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit slave 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60

=====================================================================
3.client kill
=====================================================================
4.client pause
=====================================================================
5.monitor
=====================================================================
6.info stats
total_connections_received:80
rejected_connections:0
参数说明：
total_connections_received：Redis自启动以来处理的客户端连接数总数。
rejected_connections：Redis自启动以来拒绝的客户端连接数，需要重点监控。
=====================================================================
=====================================================================
=====================================================================
=====================================================================
=====================================================================
=====================================================================
=====================================================================
=====================================================================


