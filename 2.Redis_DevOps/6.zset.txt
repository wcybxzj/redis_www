1.添加成员
zadd key score member [score member ...]
返回结果代表成功添加成员的个数

有关zadd命令有两点需要注意：
Redis3.2为zadd命令添加了nx、xx、ch、incr四个选项：
nx：member必须不存在，才可以设置成功，用于添加。
xx：member必须存在，才可以设置成功，用于更新。
ch：返回此次操作后，有序集合元素和分数发生变化的个数
incr：对score做增加，相当于后面介绍的zincrby。
有序集合相比集合提供了排序字段，但是也产生了代价，zadd的时间复杂度为O（log（n）），sadd的时间复杂度为O（1）。
===========================================================
2.获取成员个数
zcard key
===========================================================
3.计算某个成员的分数
zscore key member
tom的分数为251，如果成员不存在则返回nil：
127.0.0.1:6379> zscore user:ranking tom
"251"
127.0.0.1:6379> zscore user:ranking test
(nil)
===========================================================
4.获取成员的排名
zrank key member
zrevrank key member
zrank是从分数从低到高返回排名，zrevrank反之。
===========================================================
5.删除成员
zrem key member [member ...]
下面操作将成员mike从有序集合user：ranking中删除。
返回结果为成功删除的个数。
===========================================================
6.增加成员的分数
zincrby key increment member
===========================================================
7.返回指定排名范围的成员
zrange    key start end [withscores]
zrevrange key start end [withscores]
有序集合是按照分值排名的，zrange是从低到高返回，zrevrange反之。
如果加上withscores选项，同时会返回成员的分数
===========================================================
8.返回指定分数范围的成员
zrangebyscore    key min max [withscores] [limit offset count]
zrevrangebyscore key max min [withscores] [limit offset count]

zrangebyscore按照分数从低到高返回，zrevrangebyscore反之。
min和max还支持开区间（小括号）和闭区间（中括号），-inf和+inf分别代表无限小和无限大
127.0.0.1:6379> ZRANGEBYSCORE myzset -inf +inf withscores limit 0 5
 1) "yeye"
 2) "95"
 3) "dagu"
 4) "96"
 5) "laogu"
 6) "97"
 7) "ly"
 8) "98"
 9) "wc"
10) "99"
127.0.0.1:6379> ZRANGEBYSCORE myzset (95 +inf withscores limit 0 5
 1) "dagu"
 2) "96"
 3) "laogu"
 4) "97"
 5) "ly"
 6) "98"
 7) "wc"
 8) "99"
 9) "ybx"
10) "100"

===========================================================
9.返回指定分数范围成员个数
zcount key min max
127.0.0.1:6379> zcount myzset (95 100
(integer) 5
127.0.0.1:6379> zcount myzset 95 100
(integer) 6
===========================================================
10.删除指定排名内的升序元素
zremrangebyrank key start end
下面操作删除第start到第end名的成员：
127.0.0.1:6379> zremrangebyrank user:ranking 0 2
(integer) 3

===========================================================
11.删除指定分数范围的成员
zremrangebyscore key min max
下面操作将250分以上的成员全部删除，返回结果为成功删除的个数：
127.0.0.1:6379> zremrangebyscore user:ranking (250 +inf
(integer) 2
===========================================================
12.交集
zadd user:ranking:1 1 kris 91 mike 200 frank 220 tim 250 martin 251 tom
(integer) 6
zadd user:ranking:2 8 james 77 mike 625 martin 888 tom
(integer) 4

zinterstore destination numkeys key [key ...] [weights weight [weight ...]] [aggregate sum|min|max]
这个命令参数较多，下面分别进行说明：

destination：交集计算结果保存到这个键。
numkeys：需要做交集计算键的个数。
key[key...]：需要做交集计算的键。
weights weight[weight...]：
每个键的权重，在做交集计算时，每个键中的每个member会将自己分数乘以这个权重， 每个键的权重默认是1。
aggregate sum|min|max：
计算成员交集后，分值可以按照sum（和）、min（最小值）、max（最大值）做汇总，默认值是sum。

===========================================================
13.并集
zunionstore destination numkeys key [key ...] [weights weight [weight ...]] [aggregate sum|min|max]
该命令的所有参数和zinterstore是一致的，只不过是做并集计算
===========================================================
